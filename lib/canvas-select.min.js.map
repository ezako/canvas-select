{"version":3,"file":"canvas-select.min.js","sources":["../src/shape/Shape.ts","../src/tools.ts","../src/shape/Rect.ts","../src/shape/Polygon.ts","../src/shape/Dot.ts","../src/EventBus.ts","../src/shape/Line.ts","../src/shape/Circle.ts","../src/index.ts"],"sourcesContent":["import { createUuid } from \"../tools\"\n\ninterface ShapeProp {\n    type: number\n    [key: string]: any\n}\nexport default class Shape {\n    /** 标签 */\n    public label: string = ''\n    /** 是否隐藏标签 */\n    public hideLabel: boolean\n    /** 坐标 */\n    public coor: any[] = []\n    /** 边线颜色 */\n    public strokeStyle: string\n    /** 填充颜色 */\n    public fillStyle: string\n    /** 边线宽度 */\n    public lineWidth: number\n    /** 标签填充颜色 */\n    public labelFillStyle: string\n    /** 标签文字颜色 */\n    public textFillStyle: string\n    /** 标签文字字体 */\n    public labelFont: string\n    /** 1 矩形，2 多边形，3 点，4 折线，5 圆 */\n    public type: number // 形状\n    /** 当前是否处于活动状态 */\n    public active: boolean = false\n    /** 当前是否处于创建状态 */\n    public creating: boolean = false\n    /** 当前是否处于拖拽状态 */\n    public dragging: boolean = false\n    /** 索引 */\n    public index: number\n    /** 唯一标识 */\n    public uuid: string = createUuid()\n    /** 向上展示label */\n    public labelUp: boolean\n    constructor(item: ShapeProp, index: number) {\n        this.index = index\n        Object.assign(this, item)\n    }\n}\n","export function createUuid(): string {\n    const s: any[] = [];\n    const hexDigits = '0123456789abcdef';\n    for (let i = 0; i < 36; i++) {\n        const m = Math.floor(Math.random() * 0x10)\n        s[i] = hexDigits.slice(m, m + 1);\n    }\n    s[14] = '4';\n    const n = (s[19] & 0x3) | 0x8\n    s[19] = hexDigits.slice(n, n + 1);\n    s[8] = s[13] = s[18] = s[23] = '-';\n    const uuid = s.join('');\n    return uuid;\n}\n","import Shape from './Shape';\n\nexport default class Rect extends Shape {\n  public type = 1\n  constructor(item: any, index: number) {\n    super(item, index)\n  }\n  get ctrlsData() {\n    const [[x0, y0], [x1, y1]] = this.coor;\n    return [\n      [x0, y0],\n      [x0 + (x1 - x0) / 2, y0],\n      [x1, y0],\n      [x1, y0 + (y1 - y0) / 2],\n      [x1, y1],\n      [x0 + (x1 - x0) / 2, y1],\n      [x0, y1],\n      [x0, y0 + (y1 - y0) / 2],\n    ];\n  }\n}\n","import Shape from './Shape';\n\nexport default class Polygon extends Shape {\n  public type = 2\n  constructor(item: any, index: number) {\n    super(item, index)\n  }\n  get ctrlsData() {\n    return this.coor.length > 2 ? this.coor : [];\n  }\n}\n","import Shape from './Shape';\n\nexport default class Dot extends Shape {\n    public type = 3\n    constructor(item: any, index: number) {\n        super(item, index)\n    }\n}\n","export default class EventBus {\n    public _eventTree: Record<string, any> = {}\n    /**\n   * 注册事件\n   * @param eventName 事件名称\n   * @param cb 回调方法\n   */\n    on(eventName: string, cb: Function) {\n        const fns = this._eventTree[eventName];\n        if (Array.isArray(fns)) {\n            fns.push(cb);\n        } else {\n            this._eventTree[eventName] = [cb];\n        }\n    }\n\n    /**\n     * 触发事件\n     * @param eventName 事件名称\n     * @param payload 传递参数\n     */\n    emit(eventName: string, ...payload: any) {\n        const fns = this._eventTree[eventName];\n        if (Array.isArray(fns)) {\n            fns.forEach((fn) => fn(...payload));\n        }\n    }\n\n    /**\n     * 注销事件\n     * @param eventName 事件名称\n     * @param cb 传递参数\n     */\n    off(eventName: string, cb: Function) {\n        const fns = this._eventTree[eventName];\n        const index = fns.find((fn: Function) => fn === cb);\n        if (Array.isArray(fns) && index) {\n            fns.splice(index, 1);\n        }\n    }\n}\n","import Shape from './Shape';\n\nexport default class Line extends Shape {\n  public type = 4\n  constructor(item: any, index: number) {\n    super(item, index)\n  }\n  get ctrlsData() {\n    return this.coor.length > 1 ? this.coor : [];\n  }\n}\n","import Shape from './Shape';\n\nexport default class Circle extends Shape {\n    public type = 5\n    public radius = 0\n    constructor(item: any, index: number) {\n        super(item, index)\n        this.radius = item.radius || this.radius\n    }\n    get ctrlsData() {\n        const [x, y] = this.coor\n        return [\n            [x, y - this.radius],\n            [x + this.radius, y],\n            [x, y + this.radius],\n            [x - this.radius, y]\n        ]\n    }\n}\n","import Rect from './shape/Rect';\nimport Polygon from './shape/Polygon';\nimport Dot from './shape/Dot';\nimport EventBus from './EventBus';\nimport Line from './shape/Line';\nimport Circle from './shape/Circle';\nimport pkg from '../package.json'\n\nexport type Point = [number, number]\nexport type AllShape = Rect | Polygon | Dot | Line | Circle\n\nexport default class CanvasSelect extends EventBus {\n    /** 当前版本 */\n    version = pkg.version\n    /** 只读模式，画布不允许任何交互 */\n    lock: boolean = false\n    /** 最小矩形宽度 */\n    MIN_WIDTH = 10\n    /** 最小矩形高度 */\n    MIN_HEIGHT = 10\n    /** 最小圆形半径 */\n    MIN_RADIUS = 5\n    /** 边线颜色 */\n    strokeStyle = '#0f0'\n    /** 填充颜色 */\n    fillStyle = 'rgba(0, 0, 255,0.1)'\n    /** 边线宽度 */\n    lineWidth = 1\n    /** 当前选中的标注边线颜色 */\n    activeStrokeStyle = '#f00'\n    /** 当前选中的标注填充颜色 */\n    activeFillStyle = 'rgba(255, 0, 0,0.1)'\n    /** 控制点边线颜色 */\n    ctrlStrokeStyle = '#000'\n    /** 控制点填充颜色 */\n    ctrlFillStyle = '#fff'\n    /** 控制点半径 */\n    ctrlRadius = 3\n    /** 是否隐藏标签 */\n    hideLabel = false\n    /** 标签背景填充颜色 */\n    labelFillStyle = '#fff'\n    /** 标签字体 */\n    labelFont = '10px sans-serif'\n    /** 标签文字颜色 */\n    textFillStyle = '#000'\n    /** 标签字符最大长度，超出使用省略号 */\n    labelMaxLen = 10\n    /** 画布宽度 */\n    WIDTH = 0\n    /** 画布高度 */\n    HEIGHT = 0\n\n    canvas: HTMLCanvasElement\n\n    ctx: CanvasRenderingContext2D\n    /** 所有标注数据 */\n    dataset: Array<AllShape> = []\n\n    offScreen: HTMLCanvasElement\n\n    offScreenCtx: CanvasRenderingContext2D\n    /** 记录锚点距离 */\n    remmber: number[][]\n    /** 记录鼠标位置 */\n    mouse: Point\n    /** 记录背景图鼠标位移 */\n    remmberOrigin: number[] = [0, 0]\n    /** 0 不创建，1 矩形，2 多边形，3 点，4 折线，5 圆 */\n    createType = 0 // \n    /** 控制点索引 */\n    ctrlIndex = -1\n    /** 背景图片 */\n    image: HTMLImageElement = new Image()\n    /** 图片原始宽度 */\n    IMAGE_ORIGIN_WIDTH: number;\n    /** 图片缩放宽度 */\n    IMAGE_WIDTH = 0;\n    /** 图片原始高度 */\n    IMAGE_ORIGIN_HEIGHT = 0;\n    /** 图片缩放高度 */\n    IMAGE_HEIGHT = 0;\n    /** 原点x */\n    originX = 0;\n    /** 原点y */\n    originY = 0;\n    /** 缩放步长 */\n    scaleStep = 0;\n    /** 滚动缩放 */\n    scrollZoom = true\n\n    private timer: NodeJS.Timer;\n    /** 最小touch双击时间 */\n    dblTouch = 300;\n    /** 记录touch双击开始时间 */\n    dblTouchStore = 0; // \n    /** 这个选项可以帮助浏览器进行内部优化 */\n    alpha = true;\n    /** 专注模式 */\n    focusMode = false;\n    /** 记录当前事件 */\n    private evt: MouseEvent | TouchEvent | KeyboardEvent\n    /** 触控缩放时记录上一次两点距离 */\n    scaleTouchStore = 0\n    /** 当前是否为双指触控 */\n    isTouch2 = false\n    isMobile = navigator.userAgent.indexOf('Mobile') > -1\n    /** 向上展示label */\n    labelUp = false\n    /**\n     * @param el Valid CSS selector string, or DOM\n     * @param src image src\n     */\n    constructor(el: HTMLCanvasElement | string, src?: string) {\n        super()\n        this.handleLoad = this.handleLoad.bind(this)\n        this.handleContextmenu = this.handleContextmenu.bind(this)\n        this.handleMousewheel = this.handleMousewheel.bind(this)\n        this.handleMouseDown = this.handleMouseDown.bind(this)\n        this.handelMouseMove = this.handelMouseMove.bind(this)\n        this.handelMouseUp = this.handelMouseUp.bind(this)\n        this.handelDblclick = this.handelDblclick.bind(this)\n        this.handelKeyup = this.handelKeyup.bind(this)\n        const container = typeof el === 'string' ? document.querySelector(el) : el;\n        if (container instanceof HTMLCanvasElement) {\n            this.canvas = container;\n            this.offScreen = document.createElement('canvas');\n            this.initSetting();\n            this.initEvents();\n            src && this.setImage(src);\n        } else {\n            console.warn('HTMLCanvasElement is required!');\n        }\n    }\n    /** 当前当前选中的标注 */\n    get activeShape() {\n        return this.dataset.find(x => x.active) || {} as any;\n    }\n    /** 当前缩放比例 */\n    get scale() {\n        if (this.IMAGE_ORIGIN_WIDTH && this.IMAGE_WIDTH) {\n            return this.IMAGE_WIDTH / this.IMAGE_ORIGIN_WIDTH;\n        }\n        return 1;\n    }\n    /** 图片最小边尺寸 */\n    get imageMin() {\n        return Math.min(this.WIDTH, this.HEIGHT)\n    }\n    /** 图片原始最大边尺寸 */\n    get imageOriginMax() {\n        return Math.max(this.WIDTH, this.HEIGHT)\n    }\n    /**\n     * 合成事件\n     * @param e \n     * @returns \n     */\n    mergeEvent(e: TouchEvent | MouseEvent) {\n        let mouseX = 0\n        let mouseY = 0\n        let mouseCX = 0\n        let mouseCY = 0\n        if (this.isMobile) {\n            let { clientX, clientY } = (e as TouchEvent).touches[0]\n            let target = e.target as HTMLCanvasElement\n            const { left, top } = target.getBoundingClientRect()\n            mouseX = Math.round(clientX - left)\n            mouseY = Math.round(clientY - top)\n            if ((e as TouchEvent).touches.length === 2) {\n                let { clientX: clientX1 = 0, clientY: clientY1 = 0 } = (e as TouchEvent).touches[1] || {}\n                mouseCX = Math.round(Math.abs((clientX1 - clientX) / 2 + clientX) - left)\n                mouseCY = Math.round(Math.abs((clientY1 - clientY) / 2 + clientY) - top)\n            }\n        } else {\n            mouseX = (e as MouseEvent).offsetX\n            mouseY = (e as MouseEvent).offsetY\n        }\n        return { ...e, mouseX, mouseY, mouseCX, mouseCY }\n    }\n\n    handleLoad() {\n        this.emit('load', this.image.src);\n        this.IMAGE_ORIGIN_WIDTH = this.IMAGE_WIDTH = this.image.width;\n        this.IMAGE_ORIGIN_HEIGHT = this.IMAGE_HEIGHT = this.image.height;\n        this.fitZoom();\n    }\n    handleContextmenu(e: MouseEvent) {\n        e.preventDefault();\n        this.evt = e\n        if (this.lock) return;\n    }\n    handleMousewheel(e: WheelEvent) {\n        e.stopPropagation();\n        this.evt = e\n        if (this.lock || !this.scrollZoom) return;\n        const { mouseX, mouseY } = this.mergeEvent(e)\n        this.mouse = [mouseX, mouseY];\n        this.setScale(e.deltaY < 0, true);\n    }\n    handleMouseDown(e: MouseEvent | TouchEvent) {\n        e.stopPropagation();\n        this.evt = e\n        if (this.lock) return;\n        const { mouseX, mouseY, mouseCX, mouseCY } = this.mergeEvent(e)\n        const offsetX = Math.round(mouseX / this.scale);\n        const offsetY = Math.round(mouseY / this.scale);\n        this.mouse = this.isMobile && (e as TouchEvent).touches.length === 2 ? [mouseCX, mouseCY] : [mouseX, mouseY];\n        this.remmberOrigin = [mouseX - this.originX, mouseY - this.originY];\n        if ((!this.isMobile && (e as MouseEvent).buttons === 1) || (this.isMobile && (e as TouchEvent).touches.length === 1)) { // 鼠标左键\n            const ctrls = this.activeShape.ctrlsData || [];\n            this.ctrlIndex = ctrls.findIndex((coor: Point) => this.isPointInCircle(this.mouse, coor, this.ctrlRadius));\n            if (this.ctrlIndex > -1) { // 点击到控制点\n                const [x0, y0] = ctrls[this.ctrlIndex];\n                this.remmber = [[offsetX - x0, offsetY - y0]];\n            } else if (this.isInBackground(e)) {\n                if (this.activeShape.creating) {// 创建中\n                    if ([2, 4].includes(this.activeShape.type)) {\n                        const [x, y] = this.activeShape.coor[this.activeShape.coor.length - 1];\n                        if (x !== offsetX && y !== offsetY) {\n                            const nx = Math.round(offsetX - this.originX / this.scale)\n                            const ny = Math.round(offsetY - this.originY / this.scale)\n                            this.activeShape.coor.push([nx, ny]);\n                        }\n                    }\n                } else if (this.createType > 0) { // 开始创建\n                    let newShape;\n                    const nx = Math.round(offsetX - this.originX / this.scale)\n                    const ny = Math.round(offsetY - this.originY / this.scale)\n                    const curPoint: Point = [nx, ny];\n                    switch (this.createType) {\n                        case 1:\n                            newShape = new Rect({ coor: [curPoint, curPoint] }, this.dataset.length);\n                            newShape.creating = true;\n                            break;\n                        case 2:\n                            newShape = new Polygon({ coor: [curPoint] }, this.dataset.length);\n                            newShape.creating = true;\n                            break;\n                        case 3:\n                            newShape = new Dot({ coor: curPoint }, this.dataset.length);\n                            this.emit('add', newShape)\n                            break;\n                        case 4:\n                            newShape = new Line({ coor: [curPoint] }, this.dataset.length);\n                            newShape.creating = true;\n                            break;\n                        case 5:\n                            newShape = new Circle({ coor: curPoint }, this.dataset.length);\n                            newShape.creating = true;\n                            break;\n                        default:\n                            break;\n                    }\n                    this.dataset.forEach((sp) => { sp.active = false; });\n                    newShape.active = true;\n                    this.dataset.push(newShape);\n                } else {\n                    // 是否点击到形状\n                    const [hitShapeIndex, hitShape] = this.hitOnShape(this.mouse);\n                    if (hitShapeIndex > -1) {\n                        this.dataset.forEach((item, i) => item.active = i === hitShapeIndex);\n                        hitShape.dragging = true;\n                        this.dataset.splice(hitShapeIndex, 1);\n                        this.dataset.push(hitShape);\n                        this.remmber = [];\n                        if ([3, 5].includes(hitShape.type)) {\n                            const [x, y] = hitShape.coor;\n                            this.remmber = [[offsetX - x, offsetY - y]];\n                        } else {\n                            hitShape.coor.forEach((pt: any) => {\n                                this.remmber.push([offsetX - pt[0], offsetY - pt[1]]);\n                            });\n                        }\n                        this.emit('select', hitShape)\n                    } else {\n                        this.activeShape.active = false;\n                        this.dataset.sort((a, b) => a.index - b.index)\n                    }\n                }\n                this.update();\n            }\n        }\n    }\n    handelMouseMove(e: MouseEvent | TouchEvent) {\n        e.stopPropagation();\n        this.evt = e\n        if (this.lock) return;\n        const { mouseX, mouseY, mouseCX, mouseCY } = this.mergeEvent(e)\n        const offsetX = Math.round(mouseX / this.scale);\n        const offsetY = Math.round(mouseY / this.scale);\n        this.mouse = this.isMobile && (e as TouchEvent).touches.length === 2 ? [mouseCX, mouseCY] : [mouseX, mouseY];\n        if (((!this.isMobile && (e as MouseEvent).buttons === 1) || (this.isMobile && (e as TouchEvent).touches.length === 1)) && this.activeShape.type) {\n            if (this.ctrlIndex > -1 && (this.isInBackground(e) || this.activeShape.type === 5)) {\n                const [[x, y]] = this.remmber;\n                // resize矩形\n                if (this.activeShape.type === 1) {\n                    const [[x0, y0], [x1, y1]] = this.activeShape.coor;\n                    let coor: Point[] = [];\n                    switch (this.ctrlIndex) {\n                        case 0:\n                            coor = [[offsetX - x, offsetY - y], [x1, y1]];\n                            break;\n                        case 1:\n                            coor = [[x0, offsetY - y], [x1, y1]];\n                            break;\n                        case 2:\n                            coor = [[x0, offsetY - y], [offsetX - x, y1]];\n                            break;\n                        case 3:\n                            coor = [[x0, y0], [offsetX - x, y1]];\n                            break;\n                        case 4:\n                            coor = [[x0, y0], [offsetX - x, offsetY - y]];\n                            break;\n                        case 5:\n                            coor = [[x0, y0], [x1, offsetY - y]];\n                            break;\n                        case 6:\n                            coor = [[offsetX - x, y0], [x1, offsetY - y]];\n                            break;\n                        case 7:\n                            coor = [[offsetX - x, y0], [x1, y1]];\n                            break;\n                        default:\n                            break;\n                    }\n                    const [[a0, b0], [a1, b1]] = coor;\n                    if ((a1 - a0) >= this.MIN_WIDTH && (b1 - b0) >= this.MIN_HEIGHT) {\n                        this.activeShape.coor = coor;\n                    } else {\n                        this.emit('warn', `Width cannot be less than ${this.MIN_WIDTH},Height cannot be less than${this.MIN_HEIGHT}。`);\n                    }\n                } else if ([2, 4].includes(this.activeShape.type)) {\n                    const nx = Math.round(offsetX - this.originX / this.scale)\n                    const ny = Math.round(offsetY - this.originY / this.scale)\n                    const newPoint = [nx, ny]\n                    this.activeShape.coor.splice(this.ctrlIndex, 1, newPoint);\n                } else if (this.activeShape.type === 5) {\n                    const nx = Math.round(offsetX - this.originX / this.scale)\n                    const newRadius = nx - this.activeShape.coor[0]\n                    if (newRadius >= this.MIN_RADIUS) this.activeShape.radius = newRadius;\n                }\n            } else if (this.activeShape.dragging) { // 拖拽\n                let coor = [];\n                let noLimit = true\n                const w = this.IMAGE_ORIGIN_WIDTH || this.WIDTH;\n                const h = this.IMAGE_ORIGIN_HEIGHT || this.HEIGHT;\n                if ([3, 5].includes(this.activeShape.type)) {\n                    const [t1, t2] = this.remmber[0];\n                    const x = offsetX - t1;\n                    const y = offsetY - t2;\n                    if (x < 0 || x > w || y < 0 || y > h) noLimit = false;\n                    coor = [x, y];\n                } else {\n                    for (let i = 0; i < this.activeShape.coor.length; i++) {\n                        const tar = this.remmber[i];\n                        const x = offsetX - tar[0];\n                        const y = offsetY - tar[1];\n                        if (x < 0 || x > w || y < 0 || y > h) noLimit = false\n                        coor.push([x, y]);\n                    }\n                }\n                if (noLimit) this.activeShape.coor = coor;\n            } else if (this.activeShape.creating && this.isInBackground(e)) {\n                const x = Math.round(offsetX - this.originX / this.scale);\n                const y = Math.round(offsetY - this.originY / this.scale);\n                // 创建矩形\n                if (this.activeShape.type === 1) {\n                    this.activeShape.coor.splice(1, 1, [x, y]);\n                } else if (this.activeShape.type === 5) {\n                    const [x0, y0] = this.activeShape.coor\n                    const r = Math.sqrt((x0 - x) ** 2 + (y0 - y) ** 2);\n                    this.activeShape.radius = r\n                }\n            }\n            this.update();\n        } else if ([2, 4].includes(this.activeShape.type) && this.activeShape.creating) {\n            // 多边形添加点\n            this.update();\n        } else if ((!this.isMobile && (e as MouseEvent).buttons === 2 && (e as MouseEvent).which === 3) || (this.isMobile && (e as TouchEvent).touches.length === 1 && !this.isTouch2)) {\n            // 拖动背景\n            this.originX = 0;\n            this.originY = 0;\n            this.update();\n        } else if (this.isMobile && (e as TouchEvent).touches.length === 2) {\n            this.isTouch2 = true\n            const touch0 = (e as TouchEvent).touches[0]\n            const touch1 = (e as TouchEvent).touches[1]\n            const cur = this.scaleTouchStore\n            this.scaleTouchStore = Math.abs((touch1.clientX - touch0.clientX) * (touch1.clientY - touch0.clientY))\n            this.setScale(this.scaleTouchStore > cur, true);\n\n        }\n\n    }\n    handelMouseUp(e: MouseEvent | TouchEvent) {\n        e.stopPropagation();\n        this.evt = e\n        if (this.lock) return;\n        if (this.isMobile) {\n            if ((e as TouchEvent).touches.length === 0) {\n                this.isTouch2 = false\n            }\n            if ((Date.now() - this.dblTouchStore) < this.dblTouch) {\n                this.handelDblclick(e)\n                return\n            }\n            this.dblTouchStore = Date.now()\n        }\n        this.remmber = [];\n        if (this.activeShape.type) {\n            this.activeShape.dragging = false;\n            if (this.activeShape.creating) {\n                if (this.activeShape.type === 1) {\n                    const [[x0, y0], [x1, y1]] = this.activeShape.coor;\n                    if (Math.abs(x0 - x1) < this.MIN_WIDTH || Math.abs(y0 - y1) < this.MIN_HEIGHT) {\n                        this.dataset.pop();\n                        this.emit('warn', `Width cannot be less than ${this.MIN_WIDTH},Height cannot be less than ${this.MIN_HEIGHT}`);\n                    } else {\n                        this.activeShape.coor = [[Math.min(x0, x1), Math.min(y0, y1)], [Math.max(x0, x1), Math.max(y0, y1)]];\n                        this.activeShape.creating = false;\n                        this.emit('add', this.activeShape);\n                    }\n                } else if (this.activeShape.type === 5) {\n                    if (this.activeShape.radius < this.MIN_RADIUS) {\n                        this.dataset.pop();\n                        this.emit('warn', `Radius cannot be less than ${this.MIN_WIDTH}`);\n                    } else {\n                        this.activeShape.creating = false;\n                        this.emit('add', this.activeShape);\n                    }\n                }\n                this.update();\n            }\n        }\n    }\n    handelDblclick(e: MouseEvent | TouchEvent) {\n        e.stopPropagation();\n        this.evt = e\n        if (this.lock) return;\n        if ([2, 4].includes(this.activeShape.type)) {\n            if ((this.activeShape.type === 2 && this.activeShape.coor.length > 2)\n                || (this.activeShape.type === 4 && this.activeShape.coor.length > 1)\n            ) {\n                this.emit('add', this.activeShape);\n                this.activeShape.creating = false;\n                this.update();\n            }\n        }\n    }\n    handelKeyup(e: KeyboardEvent) {\n        e.stopPropagation();\n        this.evt = e\n        if (this.lock || document.activeElement !== document.body) return;\n        if (this.activeShape.type) {\n            if ([2, 4].includes(this.activeShape.type) && e.key === 'Escape') {\n                if (this.activeShape.coor.length > 1 && this.activeShape.creating) {\n                    this.activeShape.coor.pop();\n                } else {\n                    this.deleteByIndex(this.activeShape.index);\n                }\n                this.update();\n            } else if (e.key === 'Backspace') {\n                this.deleteByIndex(this.activeShape.index);\n            }\n        }\n    }\n    /**\n     * 初始化配置\n     */\n    initSetting() {\n        const dpr = window.devicePixelRatio || 1\n        this.canvas.style.userSelect = 'none';\n        this.ctx = this.ctx || this.canvas.getContext('2d', { alpha: this.alpha });\n        this.WIDTH = this.canvas.clientWidth;\n        this.HEIGHT = this.canvas.clientHeight;\n        this.canvas.width = this.WIDTH * dpr\n        this.canvas.height = this.HEIGHT * dpr\n        this.canvas.style.width = this.WIDTH + 'px'\n        this.canvas.style.height = this.HEIGHT + 'px'\n        this.offScreen.width = this.WIDTH;\n        this.offScreen.height = this.HEIGHT;\n        this.offScreenCtx = this.offScreenCtx || this.offScreen.getContext('2d', { willReadFrequently: true });\n        this.ctx.scale(dpr, dpr)\n    }\n    /**\n     * 初始化事件\n     */\n    initEvents() {\n        this.image.addEventListener('load', this.handleLoad);\n        this.canvas.addEventListener('touchstart', this.handleMouseDown);\n        this.canvas.addEventListener('touchmove', this.handelMouseMove);\n        this.canvas.addEventListener('touchend', this.handelMouseUp);\n        this.canvas.addEventListener('contextmenu', this.handleContextmenu);\n        this.canvas.addEventListener('mousewheel', this.handleMousewheel);\n        this.canvas.addEventListener('mousedown', this.handleMouseDown);\n        this.canvas.addEventListener('mousemove', this.handelMouseMove);\n        this.canvas.addEventListener('mouseup', this.handelMouseUp);\n        this.canvas.addEventListener('dblclick', this.handelDblclick);\n        document.body.addEventListener('keyup', this.handelKeyup)\n    }\n    /**\n     * 添加/切换图片\n     * @param url 图片链接\n     */\n    setImage(url: string) {\n        this.image.src = url\n    }\n    /**\n     * 设置数据\n     * @param data Array\n     */\n    setData(data: AllShape[]) {\n        setTimeout(() => {\n            let initdata: AllShape[] = []\n            data.forEach((item, index) => {\n                if (Object.prototype.toString.call(item).indexOf('Object') > -1) {\n                    let shape: AllShape\n                    switch (item.type) {\n                        case 1:\n                            shape = new Rect(item, index);\n                            break;\n                        case 2:\n                            shape = new Polygon(item, index);\n                            break;\n                        case 3:\n                            shape = new Dot(item, index);\n                            break;\n                        case 4:\n                            shape = new Line(item, index);\n                            break;\n                        case 5:\n                            shape = new Circle(item, index);\n                            break;\n                        default:\n                            console.warn('Invalid shape', item)\n                            break;\n                    }\n                    [1, 2, 3, 4, 5].includes(item.type) && initdata.push(shape);\n                } else {\n                    console.warn('Shape must be an enumerable Object.', item)\n                }\n            });\n            this.dataset = initdata\n            this.update();\n        });\n    }\n    /**\n     * 判断是否在标注实例上\n     * @param mousePoint 点击位置\n     * @returns \n     */\n    hitOnShape(mousePoint: Point): [number, AllShape] {\n        let hitShapeIndex = -1;\n        let hitShape: AllShape;\n        for (let i = this.dataset.length - 1; i > -1; i--) {\n            const shape = this.dataset[i];\n            if (\n                (shape.type === 3 && this.isPointInCircle(mousePoint, shape.coor as Point, this.ctrlRadius))\n                || (shape.type === 5 && this.isPointInCircle(mousePoint, shape.coor as Point, (shape as Circle).radius * this.scale))\n                || (shape.type === 1 && this.isPointInRect(mousePoint, (shape as Rect).coor))\n                || (shape.type === 2 && this.isPointInPolygon(mousePoint, (shape as Polygon).coor))\n                || (shape.type === 4 && this.isPointInLine(mousePoint, (shape as Line).coor))\n            ) {\n                if (this.focusMode && !shape.active) continue;\n                hitShapeIndex = i;\n                hitShape = shape;\n                break\n            }\n        }\n        return [hitShapeIndex, hitShape];\n    }\n\n    /**\n     * 判断鼠标是否在背景图内部\n     * @param e MouseEvent\n     * @returns 布尔值\n     */\n    isInBackground(e: MouseEvent | TouchEvent): boolean {\n        const { mouseX, mouseY } = this.mergeEvent(e)\n        return mouseX >= this.originX\n            && mouseY >= this.originY\n            && mouseX <= this.originX + this.IMAGE_ORIGIN_WIDTH * this.scale\n            && mouseY <= this.originY + this.IMAGE_ORIGIN_HEIGHT * this.scale;\n    }\n    /**\n     * 判断是否在矩形内\n     * @param point 坐标\n     * @param coor 区域坐标\n     * @returns 布尔值\n     */\n    isPointInRect(point: Point, coor: Point[]): boolean {\n        const [x, y] = point;\n        const [[x0, y0], [x1, y1]] = coor.map((a) => a.map((b) => b * this.scale));\n        return x0 + this.originX <= x\n            && x <= x1 + this.originX\n            && y0 + this.originY <= y\n            && y <= y1 + this.originY;\n    }\n    /**\n     * 判断是否在多边形内\n     * @param point 坐标\n     * @param coor 区域坐标\n     * @returns 布尔值\n     */\n    isPointInPolygon(point: Point, coor: Point[]): boolean {\n        this.offScreenCtx.save();\n        this.offScreenCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\n        this.offScreenCtx.translate(this.originX, this.originY);\n        this.offScreenCtx.beginPath();\n        coor.forEach((pt, i) => {\n            const [x, y] = pt.map((a) => Math.round(a * this.scale));\n            if (i === 0) {\n                this.offScreenCtx.moveTo(x, y);\n            } else {\n                this.offScreenCtx.lineTo(x, y);\n            }\n        });\n        this.offScreenCtx.closePath();\n        this.offScreenCtx.fill();\n        const areaData = this.offScreenCtx.getImageData(0, 0, this.WIDTH, this.HEIGHT);\n        const index = (point[1] - 1) * this.WIDTH * 4 + point[0] * 4;\n        this.offScreenCtx.restore();\n        return areaData.data[index + 3] !== 0;\n    }\n    /**\n     * 判断是否在圆内\n     * @param point 坐标\n     * @param center 圆心\n     * @param r 半径\n     * @param needScale 是否为圆形点击检测\n     * @returns 布尔值\n     */\n    isPointInCircle(point: Point, center: Point, r: number): boolean {\n        const [x, y] = point;\n        const [x0, y0] = center.map((a) => a * this.scale);\n        const distance = Math.sqrt((x0 + this.originX - x) ** 2 + (y0 + this.originY - y) ** 2);\n        return distance <= r;\n    }\n    /**\n     * 判断是否在折线内\n     * @param point 坐标\n     * @param coor 区域坐标\n     * @returns 布尔值\n     */\n    isPointInLine(point: Point, coor: Point[]): boolean {\n        this.offScreenCtx.save();\n        this.offScreenCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\n        this.offScreenCtx.translate(this.originX, this.originY);\n        this.offScreenCtx.lineWidth = 5;\n        this.offScreenCtx.beginPath();\n        coor.forEach((pt, i) => {\n            const [x, y] = pt.map((a) => Math.round(a * this.scale));\n            if (i === 0) {\n                this.offScreenCtx.moveTo(x, y);\n            } else {\n                this.offScreenCtx.lineTo(x, y);\n            }\n        });\n        this.offScreenCtx.stroke();\n        const areaData = this.offScreenCtx.getImageData(0, 0, this.WIDTH, this.HEIGHT);\n        const index = (point[1] - 1) * this.WIDTH * 4 + point[0] * 4;\n        this.offScreenCtx.restore();\n        return areaData.data[index + 3] !== 0;\n    }\n    /**\n     * 绘制矩形\n     * @param shape 标注实例\n     * @returns \n     */\n    drawRect(shape: Rect) {\n        if (shape.coor.length !== 2) return;\n        const { strokeStyle, fillStyle, active, creating, coor, lineWidth } = shape\n        const [[x0, y0], [x1, y1]] = coor.map((a: Point) => a.map((b) => Math.round(b * this.scale)));\n        this.ctx.save();\n        this.ctx.lineWidth = lineWidth || this.lineWidth\n        this.ctx.fillStyle = fillStyle || this.fillStyle;\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\n        const w = x1 - x0;\n        const h = y1 - y0;\n        if (!creating) this.ctx.fillRect(x0, y0, w, h);\n        this.ctx.strokeRect(x0, y0, w, h);\n        this.ctx.restore();\n        this.drawLabel(coor[0], shape);\n    }\n    /**\n     * 绘制多边形\n     * @param shape 标注实例\n     */\n    drawPolygon(shape: Polygon) {\n        const { strokeStyle, fillStyle, active, creating, coor, lineWidth } = shape\n        this.ctx.save();\n        this.ctx.lineJoin = \"round\"\n        this.ctx.lineWidth = lineWidth || this.lineWidth\n        this.ctx.fillStyle = fillStyle || this.fillStyle;\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\n        this.ctx.beginPath();\n        coor.forEach((el: Point, i) => {\n            const [x, y] = el.map((a) => Math.round(a * this.scale));\n            if (i === 0) {\n                this.ctx.moveTo(x, y);\n            } else {\n                this.ctx.lineTo(x, y);\n            }\n        });\n        if (creating) {\n            const [x, y] = this.mouse || [];\n            this.ctx.lineTo(x - this.originX, y - this.originY);\n        } else if (coor.length > 2) {\n            this.ctx.closePath();\n        }\n        this.ctx.fill();\n        this.ctx.stroke();\n        this.ctx.restore();\n        this.drawLabel(coor[0], shape);\n    }\n    /**\n     * 绘制点\n     * @param shape 标注实例\n     */\n    drawDot(shape: Dot) {\n        const { strokeStyle, fillStyle, active, coor, lineWidth } = shape\n        const [x, y] = coor.map((a) => a * this.scale);\n        this.ctx.save();\n        this.ctx.lineWidth = lineWidth || this.lineWidth\n        this.ctx.fillStyle = fillStyle || this.ctrlFillStyle;\n        this.ctx.strokeStyle = active ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\n        this.ctx.beginPath();\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n        this.ctx.fill();\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n        this.ctx.stroke();\n        this.ctx.restore();\n        this.drawLabel(coor as Point, shape);\n    }\n    /**\n     * 绘制圆\n     * @param shape 标注实例\n     */\n    drawCirle(shape: Circle) {\n        const { strokeStyle, fillStyle, active, coor, label, creating, radius, ctrlsData, lineWidth } = shape\n        const [x, y] = coor.map((a) => a * this.scale);\n        this.ctx.save();\n        this.ctx.lineWidth = lineWidth || this.lineWidth\n        this.ctx.fillStyle = fillStyle || this.fillStyle;\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\n        this.ctx.beginPath();\n        this.ctx.arc(x, y, radius * this.scale, 0, 2 * Math.PI, true);\n        this.ctx.fill();\n        this.ctx.arc(x, y, radius * this.scale, 0, 2 * Math.PI, true);\n        this.ctx.stroke();\n        this.ctx.restore();\n        this.drawLabel(ctrlsData[0] as Point, shape);\n    }\n    /**\n     * 绘制折线\n     * @param shape 标注实例\n     */\n    drawLine(shape: Line) {\n        const { strokeStyle, active, creating, coor, lineWidth } = shape\n        this.ctx.save();\n        this.ctx.lineJoin = \"round\"\n        this.ctx.lineWidth = lineWidth || this.lineWidth\n        this.ctx.strokeStyle = (active || creating) ? this.activeStrokeStyle : (strokeStyle || this.strokeStyle);\n        this.ctx.beginPath();\n        coor.forEach((el: Point, i) => {\n            const [x, y] = el.map((a) => Math.round(a * this.scale));\n            if (i === 0) {\n                this.ctx.moveTo(x, y);\n            } else {\n                this.ctx.lineTo(x, y);\n            }\n        });\n        if (creating) {\n            const [x, y] = this.mouse || [];\n            this.ctx.lineTo(x - this.originX, y - this.originY);\n        }\n        this.ctx.stroke();\n        this.ctx.restore();\n        this.drawLabel(coor[0], shape);\n    }\n    /**\n     * 绘制控制点\n     * @param point 坐标\n     */\n    drawCtrl(point: Point) {\n        const [x, y] = point.map((a) => a * this.scale);\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.fillStyle = this.ctrlFillStyle;\n        this.ctx.strokeStyle = this.ctrlStrokeStyle;\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n        this.ctx.fill();\n        this.ctx.arc(x, y, this.ctrlRadius, 0, 2 * Math.PI, true);\n        this.ctx.stroke();\n        this.ctx.restore();\n    }\n    /**\n     * 绘制控制点列表\n     * @param shape 标注实例\n     */\n    drawCtrlList(shape: Rect | Polygon | Line) {\n        shape.ctrlsData.forEach((point, i) => {\n            if (shape.type === 5) {\n                if (i === 1) this.drawCtrl(point);\n            } else {\n                this.drawCtrl(point);\n            }\n        });\n    }\n    /**\n     * 绘制label\n     * @param point 位置\n     * @param label 文本\n     */\n    drawLabel(point: Point, shape: AllShape) {\n        const { label = '', labelFillStyle = '', labelFont = '', textFillStyle = '', hideLabel, labelUp, lineWidth } = shape\n        const isHideLabel = typeof hideLabel === 'boolean' ? hideLabel : this.hideLabel;\n        const isLabelUp = typeof labelUp === 'boolean' ? labelUp : this.labelUp;\n        const currLineWidth = lineWidth || this.lineWidth;\n\n        if (label.length && !isHideLabel) {\n            this.ctx.font = labelFont || this.labelFont;\n            const textPaddingLeft = 4;\n            const textPaddingTop = 4;\n            const newText = label.length < this.labelMaxLen + 1 ? label : `${label.slice(0, this.labelMaxLen)}...`;\n            const text = this.ctx.measureText(newText);\n            const font = parseInt(this.ctx.font) - 4;\n            const labelWidth = text.width + textPaddingLeft * 2;\n            const labelHeight = font + textPaddingTop * 2;\n            const [x, y] = point.map((a) => a * this.scale);\n            const toleft = (this.IMAGE_ORIGIN_WIDTH - point[0]) < labelWidth / this.scale;\n            const toTop = (this.IMAGE_ORIGIN_HEIGHT - point[1]) < labelHeight / this.scale;\n            const toTop2 = point[1] > labelHeight / this.scale;\n            const isup = isLabelUp ? toTop2 : toTop\n            this.ctx.save();\n            this.ctx.fillStyle = labelFillStyle || this.labelFillStyle;\n            this.ctx.fillRect(toleft ? (x - text.width - textPaddingLeft - currLineWidth / 2) : (x + currLineWidth / 2), isup ? (y - labelHeight - currLineWidth / 2) : (y + currLineWidth / 2), labelWidth, labelHeight);\n            this.ctx.fillStyle = textFillStyle || this.textFillStyle;\n            this.ctx.fillText(newText, toleft ? (x - text.width) : (x + textPaddingLeft + currLineWidth / 2), isup ? (y - labelHeight + font + textPaddingTop) : (y + font + textPaddingTop + currLineWidth / 2), 180);\n            this.ctx.restore();\n        }\n    }\n\n    /**\n     * 更新画布\n     */\n    update() {\n        clearTimeout(this.timer)\n        this.timer = setTimeout(() => {\n            this.ctx.save();\n            this.ctx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\n            // this.ctx.translate(this.originX, this.originY);\n            if (this.WIDTH && this.HEIGHT) {\n                this.ctx.drawImage(this.image, 0, 0, this.WIDTH, this.HEIGHT);\n            }\n            let renderList = this.focusMode ? (this.activeShape.type ? [this.activeShape] : []) : this.dataset\n            for (let i = 0; i < renderList.length; i++) {\n                const shape = renderList[i];\n                if (shape.hide) continue;\n                switch (shape.type) {\n                    case 1:\n                        this.drawRect(shape as Rect);\n                        break;\n                    case 2:\n                        this.drawPolygon(shape as Polygon);\n                        break;\n                    case 3:\n                        this.drawDot(shape as Dot);\n                        break;\n                    case 4:\n                        this.drawLine(shape as Line);\n                        break;\n                    case 5:\n                        this.drawCirle(shape as Circle);\n                        break;\n                    default:\n                        break;\n                }\n            }\n            if ([1, 2, 4, 5].includes(this.activeShape.type) && !this.activeShape.hide) {\n                this.drawCtrlList(this.activeShape);\n            }\n            this.ctx.restore();\n            this.emit('updated', this.dataset)\n        });\n    }\n\n    /**\n     * 删除指定矩形\n     * @param index number\n     */\n    deleteByIndex(index: number) {\n        const num = this.dataset.findIndex((x) => x.index === index);\n        if (num > -1) {\n            this.emit('delete', this.dataset[num]);\n            this.dataset.splice(num, 1);\n            this.dataset.forEach((item, i) => { item.index = i; });\n            this.update();\n        }\n    }\n\n    /**\n     * 计算缩放步长\n     */\n    calcStep(flag = '') {\n        if (this.IMAGE_WIDTH < this.WIDTH && this.IMAGE_HEIGHT < this.HEIGHT) {\n            if (flag === '' || flag === 'b') {\n                this.setScale(true, false, true);\n                this.calcStep('b');\n            }\n        }\n        if (this.IMAGE_WIDTH > this.WIDTH || this.IMAGE_HEIGHT > this.HEIGHT) {\n            if (flag === '' || flag === 's') {\n                this.setScale(false, false, true);\n                this.calcStep('s');\n            }\n        }\n    }\n\n    /**\n     * 缩放 \n     * @param type true放大5%，false缩小5%\n     * @param center 缩放中心 center|mouse\n     * @param pure 不绘制\n     */\n    setScale(type: boolean, byMouse = false, pure = false) {\n        if (this.lock) return;\n        const limitSize = Math.min(this.imageMin, 50)\n        if ((!type && this.imageMin < limitSize) || (type && this.IMAGE_WIDTH > this.imageOriginMax * 10)) return;\n        if (type) { this.scaleStep++; } else { this.scaleStep--; }\n        let realToLeft = 0\n        let realToRight = 0\n        const [x, y] = this.mouse || []\n        if (byMouse) {\n            realToLeft = (x - this.originX) / this.scale\n            realToRight = (y - this.originY) / this.scale\n        }\n        const abs = Math.abs(this.scaleStep);\n        const width = this.IMAGE_WIDTH;\n        this.IMAGE_WIDTH = Math.round(this.IMAGE_ORIGIN_WIDTH * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\n        this.IMAGE_HEIGHT = Math.round(this.IMAGE_ORIGIN_HEIGHT * (this.scaleStep >= 0 ? 1.05 : 0.95) ** abs);\n        if (byMouse) {\n            this.originX = 0;\n            this.originY = 0;\n        } else {\n            const scale = this.IMAGE_WIDTH / width\n            this.originX = 0;\n            this.originY = 0;\n        }\n        if (!pure) {\n            this.update();\n        }\n    }\n\n    /**\n     * 适配背景图\n     */\n    fitZoom() {\n        this.calcStep();\n        if (this.IMAGE_HEIGHT / this.IMAGE_WIDTH >= this.HEIGHT / this.WIDTH) {\n            this.IMAGE_WIDTH = this.IMAGE_ORIGIN_WIDTH / (this.IMAGE_ORIGIN_HEIGHT / this.HEIGHT);\n            this.IMAGE_HEIGHT = this.HEIGHT;\n        } else {\n            this.IMAGE_WIDTH = this.WIDTH;\n            this.IMAGE_HEIGHT = this.IMAGE_ORIGIN_HEIGHT / (this.IMAGE_ORIGIN_WIDTH / this.WIDTH);\n        }\n        this.originX = 0;\n        this.originY = 0;\n        this.update();\n    }\n    /**\n     * 设置专注模式\n     * @param type {boolean}\n     */\n    setFocusMode(type: boolean) {\n        this.focusMode = type\n        this.update()\n    }\n    /**\n     * 销毁\n     */\n    destroy() {\n        this.image.removeEventListener('load', this.handleLoad)\n        this.canvas.removeEventListener('contextmenu', this.handleContextmenu)\n        this.canvas.removeEventListener('mousewheel', this.handleMousewheel)\n        this.canvas.removeEventListener('mousedown', this.handleMouseDown)\n        this.canvas.removeEventListener('touchend', this.handleMouseDown)\n        this.canvas.removeEventListener('mousemove', this.handelMouseMove)\n        this.canvas.removeEventListener('touchmove', this.handelMouseMove)\n        this.canvas.removeEventListener('mouseup', this.handelMouseUp)\n        this.canvas.removeEventListener('touchend', this.handelMouseUp)\n        this.canvas.removeEventListener('dblclick', this.handelDblclick)\n        document.body.removeEventListener('keyup', this.handelKeyup)\n        this.canvas.width = this.WIDTH\n        this.canvas.height = this.HEIGHT\n        this.canvas.style.width = null\n        this.canvas.style.height = null\n        this.canvas.style.userSelect = null\n    }\n    /**\n     * 重新设置画布大小\n     */\n    resize() {\n        this.canvas.width = null\n        this.canvas.height = null\n        this.canvas.style.width = null\n        this.canvas.style.height = null\n        this.initSetting()\n        this.update()\n    }\n}\n\n"],"names":["Shape","item","index","this","label","coor","active","creating","dragging","uuid","s","hexDigits","i","m","Math","floor","random","slice","n","join","createUuid","Object","assign","Rect","_super","_this","call","type","__extends","defineProperty","prototype","get","_a","__read","_b","x0","y0","_c","x1","y1","Polygon","length","Dot","EventBus","_eventTree","on","eventName","cb","fns","Array","isArray","push","emit","payload","_i","arguments","forEach","fn","apply","__spreadArray","off","find","splice","Line","Circle","radius","x","y","CanvasSelect","el","src","version","pkg","lock","MIN_WIDTH","MIN_HEIGHT","MIN_RADIUS","strokeStyle","fillStyle","lineWidth","activeStrokeStyle","activeFillStyle","ctrlStrokeStyle","ctrlFillStyle","ctrlRadius","hideLabel","labelFillStyle","labelFont","textFillStyle","labelMaxLen","WIDTH","HEIGHT","dataset","remmberOrigin","createType","ctrlIndex","image","Image","IMAGE_WIDTH","IMAGE_ORIGIN_HEIGHT","IMAGE_HEIGHT","originX","originY","scaleStep","scrollZoom","dblTouch","dblTouchStore","alpha","focusMode","scaleTouchStore","isTouch2","isMobile","navigator","userAgent","indexOf","labelUp","handleLoad","bind","handleContextmenu","handleMousewheel","handleMouseDown","handelMouseMove","handelMouseUp","handelDblclick","handelKeyup","container","document","querySelector","HTMLCanvasElement","canvas","offScreen","createElement","initSetting","initEvents","setImage","console","warn","IMAGE_ORIGIN_WIDTH","min","max","mergeEvent","e","mouseX","mouseY","mouseCX","mouseCY","touches","clientX","clientY","target","getBoundingClientRect","left","top_1","top","round","_d","clientX1","_e","clientY1","abs","offsetX","offsetY","__assign","width","height","fitZoom","preventDefault","evt","stopPropagation","mouse","setScale","deltaY","scale","buttons","ctrls","activeShape","ctrlsData","findIndex","isPointInCircle","remmber","isInBackground","includes","nx","ny","newShape","curPoint","sp","hitOnShape","hitShapeIndex_1","hitShape","pt","sort","a","b","update","_f","_g","_h","a0","b0","_j","a1","b1","concat","newPoint","newRadius","noLimit","w","h","_k","t1","tar","_l","r","sqrt","pow","which","touch0","touch1","cur","Date","now","pop","activeElement","body","key","deleteByIndex","dpr","window","devicePixelRatio","style","userSelect","ctx","getContext","clientWidth","clientHeight","offScreenCtx","willReadFrequently","addEventListener","url","setData","data","setTimeout","initdata","toString","shape","mousePoint","hitShapeIndex","isPointInRect","isPointInPolygon","isPointInLine","point","map","save","clearRect","translate","beginPath","moveTo","lineTo","closePath","fill","areaData","getImageData","restore","center","stroke","drawRect","fillRect","strokeRect","drawLabel","drawPolygon","lineJoin","drawDot","arc","PI","drawCirle","drawLine","drawCtrl","drawCtrlList","isHideLabel","isLabelUp","currLineWidth","font","newText","text","measureText","parseInt","labelWidth","textPaddingLeft","labelHeight","textPaddingTop","toleft","toTop","toTop2","isup","fillText","clearTimeout","timer","drawImage","renderList","hide","num","calcStep","flag","byMouse","pure","limitSize","imageMin","imageOriginMax","setFocusMode","destroy","removeEventListener","resize"],"mappings":"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"}